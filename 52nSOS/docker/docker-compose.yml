#
# With this docker-compose file, you get three containers:
# - a tomcat
# - a nginx proxy
# - a postgresql database server
#
# http://localhost:80/ redirects to the /52n-sos-webapp and uses the latest version of the tomcat M.x branch with Java 8 JRE.
#
# When configuring the SOS, please use the following information:
# - Datasource configuration
#   - datasource: PostgreSQL/PostGIS
#   - host: db
# Everything else could be used with the default values.
# Feel free to comment out the tomcat version you do not need.
#
# Just run docker-compose up in the directory of this file.
#
# The current proxy configuration secures the context /52n-sos-webapp with user "test:test"
version: '3'
services:
  db:
    image: mdillon/postgis:9.5
    ports:
      - 5437:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=sos
    container_name: senviro_sos_db
    volumes:
      - ../../../data:/var/lib/postgresql/data
    restart: always
  sos:
    # change to 7- or 9- to change the tomcat version
    image: tomcat:8-jre8-alpine
    ports:
      - 8084:8080
      - 8000:8000
    links:
      - db:postgres
    volumes:
      - "../../bin/target:/usr/local/tomcat/webapps/52n-sos-webapp"
      # - "../webapp-bundle/target/52n-sos-webapp:/usr/local/tomcat/webapps/52n-sos-webapp"
      - "./tomcat-index.html:/usr/local/tomcat/webapps/ROOT/index.html"
    depends_on:
      - db
    environment:
      - JPDA_ADDRESS=8000
      - JPDA_TRANSPORT=dt_socket
    container_name: senviro_sos_app
    command: ["catalina.sh", "jpda", "run"]
    restart: always
  sos_broker:
    build: ./broker
    depends_on:
      - sos
    container_name: senviro_sos_broker
    restart: always
  # proxy:
  #   image: nginx:mainline-alpine
  #   ports:
  #     - 80:80
  #   links:
  #     - sos:sos
  #   volumes:
  #     - "./nginx-proxy.conf:/etc/nginx/conf.d/default.conf"
  #     - "./htpasswd:/etc/nginx/htpasswd"
  #   container_name: testing-proxy
